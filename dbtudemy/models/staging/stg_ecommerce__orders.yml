models:
  - name: stg_ecommerce__orders
    description: >
      Orders received on ecommerce site.
      Table of 1 row per order.
    columns:
      - name: order_id
        description: "Unique primary key for an order."
        tests:
          - not_null
          - unique

      - name: user_id
        description: "ID number of user who placed the order."
        tests:
          - not_null

      - name: order_status
        description: "{{ doc('stg_ecommerce__orders___status') }}"
        tests:
          - not_null
          - accepted_values:
              name: unexpected_order_status
              values:
                - Processing
                - Cancelled
                - Shipped
                - Complete
                - Returned

      - name: created_at
        description: "When the order was created."
        tests:
          - not_null
          - dbt_utils.expression_is_true:
              expression: "<= TIMESTAMP('2024-01-01 00:00:00+00')" # Assuming CURRENT_TIMESTAMP() = 01/01/2024

      - name: shipped_at
        description: "When the order was shipped."
        tests:
          - not_null:
              where: "order_status = 'Shipped' OR delivered_at IS NOT NULL"
          - dbt_utils.expression_is_true:
              expression: ">= created_at"
              where: "shipped_at IS NOT NULL"
          - dbt_utils.expression_is_true:
              expression: "<= TIMESTAMP('2024-01-01 00:00:00+00')" # Assuming CURRENT_TIMESTAMP() = 01/01/2024

      - name: delivered_at
        description: "When the order was delivered."
        tests:
          - not_null:
              where: "order_status = 'Complete'"
          - dbt_utils.expression_is_true:
              expression: ">= shipped_at"
              where: "delivered_at IS NOT NULL"
          - dbt_utils.expression_is_true:
              expression: "<= TIMESTAMP('2024-01-01 00:00:00+00')" # Assuming CURRENT_TIMESTAMP() = 01/01/2024

      - name: returned_at
        description: "If returned, when the order was returned."
        tests:
          - not_null:
              where: "order_status = 'Returned'"
          - dbt_utils.expression_is_true:
              expression: ">= delivered_at"
              where: "returned_at IS NOT NULL"
          - dbt_utils.expression_is_true:
              expression: "<= TIMESTAMP('2024-01-01 00:00:00+00')" # Assuming CURRENT_TIMESTAMP() = 01/01/2024

      - name: num_of_item
        description: "Number of items order relating to the order."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0

